多态:
    多种状态。
    比如：同样一个函数在不同的场景下有不同的状态


同样的行为（函数），传入不同的对象，得到不同的状态

函数还是那个函数
传入参数不同
状态不同

多态成立的条件：
    实现多态的三个条件：
        1、有继承    （定义父类、定义子类，子类继承父类)
        2、函数重写  （子类重写父类的函数）
        3、父类引用指向子类对象 （子类对象传给父类对象调用者）


多态的好处：
    为什么说多态是三大特性之一：
        1、在不改变框架代码的情况下，通过多态语法轻松的实现模块和模块之间的解耦合；实现了软件系统的可拓展
        2、对解耦合的大白话解释：搭建的平台函数def object_play(herofighter:HeroFighter, enemyfighter:EnemyFighter) 相当于任务的调用者；子类、孙子类重写父类的函数，相当于子任务；相当于任务的调用者和任务的编写者进行了解耦合
        3、对可拓展的大白话解释： 搭建的平台函数def object_play(herofighter:HeroFighter, enemyfighter:EnemyFighter)，在不做任何修改的情况下，可以调用后来人写的代码
        4、对“继承和多态对比理解”大白话解释：
            继承相当于：孩子可以复用老爹的东西。
            多态相当于：老爹框架，不做任何修改的情况下，可以可拓展的使用后来人（孩子）写的东西。



