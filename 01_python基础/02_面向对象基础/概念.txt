属性是名词，      属性：是对象具有的特征
方法是动词，      方法：是对象具有的功能

封装：简化编程，增强安全性
    对外提供访问方式，对外提供了解方式
    把属性和方法封装在一起，仅提供对外的方法让别人去访问。
    在面向对象中，封装就是隐藏对象的属性和实现细节，进对外公开接口。
继承：子承父业，代码复用
    继承就是子类继承父类的属性和方法，使得子类对象(实例)具有父类的特征和行为。
        多层继承：一个父类有子类，其子类还有子类
        多继承（子类增强）：一个子类有多个父类
        单继承：只有一个子类
多态：解耦合，可拓展
    不同类的对象对同一消息做出响应，即同一消息可根据发送对象的不同而采用多种的行为方式。
    大白话：同样的一个函数（消息）在不同场景下表现出不同形态（功能）




类的成员：
    数据（变量）（属性）  +   函数（方法）（行为）


把对象具体了，就是实例化对象
    类是模板：对现实事物的抽象描述
    对象：显示事物的具体体现


属性：表示固有特征，在python中使用变量表示，例如：人的姓名、年龄、身高、体重等。都是对象属性。


Python 中没有方法的重载，定义多个同名方法，只有最后一个有效


万物皆对象
根据业务进行抽象
