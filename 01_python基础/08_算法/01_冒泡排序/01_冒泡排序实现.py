"""
    排序算法稳定性介绍
        概述 ：排序算法 = 把一串数据按照升序或者降序的方式进行排序  方法、思维、方式
        分类：
            稳定排序算法：
                排序后，相同元素的相对位置不发生改变
            不稳定排序算法：
                排序后，相同元素的相对位置发生变化

        冒泡排序：
            原理：相邻元素两两比较，大的往后走，这样第一轮比较厚，最大值在最大索引处
                重复该动作，直到排序完毕。
            核心：
                1.比较的总轮数：  列表的长度 - 1
                2.每轮比较的总次数   列表的长度 - 1 - 当前轮数的索引
                3.谁和谁比较    ？   列表[j] 和 列表[j+1]
            分析流程：  假设元素个数5个，具体如下：[5,3,4,7,2]
                    比较的轮数，i             每轮比较的次数，j
                    第一轮：索引0             4 -> 5-1-0
                    第二轮：索引1            3 -> 5-1-1
                    第三轮：索引2             2 -> 5-1-2
                    第四轮：索引3             1 -> 5-1-3

"""

# 冒泡排序的函数
def bubble_sort(my_list):

    # 1.获取列表的长度   n代表列表长度
    n = len(my_list)

    # 定义循环，  外循环代表控制比较的轮数   内循环代表控制比较次数
    # 向上冒泡，先将最大的冒上去
    for i in range(n-1):
        for j in range(n - 1 -i):
            # 具体的比较动作，相邻的两两元素比较，大的往后
            if my_list[j] > my_list[j+1]:
                my_list[j], my_list[j+1] = my_list[j+1], my_list[j]

if __name__ == '__main__':
    my_list = [5, 3, 4, 7, 2]
    bubble_sort(my_list)
    print(my_list)