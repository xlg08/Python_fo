"""
    插入排序介绍：
        原理：
            把列表分为两个部分，假设第一个元素是有序的，剩下的是无序的。
            每次都从无序的中获取一个元素。和有序前面的元素进行比较
            决定出他的位置，进行插入。直至无序列表的元素操作完毕。剩下的列表就是：有序的
        分析流程：
            假设共有5个元素：
                第几轮             该轮数的比较总次数               公式（具体谁和谁比较）
                第一轮                 1次                       索引1和索引0进行比较
                第二轮                 2次                       索引2和索引0，1进行比较
                第三轮                 3次                       索引3和索引0，1，2进行比较
                第四轮                 4次                       索引4和索引0，1，2，3进行比较
        要点：
            1.比较的总轮数            列表长度 - 1                    range(1, n)
            2.每轮比较总次数                                         range(i, 0,-1)
            3.谁和谁比较？         索引j和索引j-1位置的元素比较

    最优： O(n)
    最差： O(n²)
"""

def insert_sort(my_list):
    n = len(my_list)
    for i in range(1, n):
        for j in range(i, 0, -1):
            # 具体的比较过程
            if my_list[j] < my_list[j - 1]:
                my_list[j], my_list[j - 1] = my_list[j - 1], my_list[j]
            else:
                # 走到次数，说明元素已经找到了自己的位置
                break

if __name__ == '__main__':
    my_list = [5, 3, 4, 7, 2]
    insert_sort(my_list)
    print(my_list)




